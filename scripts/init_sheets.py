# scripts/init_sheets.py
# =========================================================
# –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ô –°–ö–†–ò–ü–¢ –î–õ–Ø –†–ê–ë–û–¢–´ –° GOOGLE SHEETS
#
# ‚ö° –ß—Ç–æ –¥–µ–ª–∞–µ—Ç:
#   - –°–æ–∑–¥–∞—ë—Ç –Ω—É–∂–Ω—ã–µ –ª–∏—Å—Ç—ã (–µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç) 
#   - –ü—Ä–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏
#   - –î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø–∏—Å–∏
#
# üöÄ –ö–∞–∫ –∑–∞–ø—É—Å–∫–∞—Ç—å:
#   1. –£–±–µ–¥–∏—Å—å, —á—Ç–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ venv:
#        source .venv/bin/activate
#   2. –ó–∞–ø—É—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç:
#        python scripts/init_sheets.py
#
# üìå –í–∞–∂–Ω–æ:
#   - –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü
#   - –í —Ä–∞–±–æ—á–µ–º –±–æ—Ç–µ –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
#   - –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ –ª–∏—Å—Ç—ã
# =========================================================

import sys
import os
import asyncio
from datetime import datetime

# –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path
sys.path.append(os.path.dirname(os.path.dirname(__file__)))

from services import gsheets

# üëá –¢–≤–æ–π —Ä–µ–∞–ª—å–Ω—ã–π Telegram user_id
TEST_USER_ID = 2101512357
TEST_USERNAME = "staritsin_a"

async def init_sheets():
    now = datetime.now().isoformat(timespec="seconds")

    tests = [
        (
            "users_raw",
            ["ts","user_id","username","event","meta"],
            [now, TEST_USER_ID, TEST_USERNAME, "init", "{}"]
        ),
        (
            "payments_raw",
            ["ts","user_id","amount_rub","order_id","mode","payment_url"],
            [now, TEST_USER_ID, 100, "order123", "TEST", "http://url"]
        ),
        (
            "results_raw",
            ["ts","user_id","payment_id","status","amount_rub"],
            [now, TEST_USER_ID, "pid123", "registered", 100]
        ),
        (
            "generations_raw",
            ["ts","user_id","price_rub","input_type","prompt","file_id"],
            [now, TEST_USER_ID, 85, "text", "hello", "file123"]
        ),
        (
            "balances_raw",
            ["ts","user_id","old_balance","delta","new_balance","reason"],
            [now, TEST_USER_ID, 0, 5, 5, "init_bonus"]
        ),
        (
            "Referrals",
            ["ts","referrer_id","new_user_id","status"],
            [now, TEST_USER_ID, 999999, "registered"]
        ),
        (
            "Referrals_Summary",
            ["ts","user_id","invited_total","invited_paid","bonus_total"],
            [now, TEST_USER_ID, 1, 0, 0]
        ),
        (
            "Logs",
            ["ts","msg"],
            [now, "init OK"]
        ),
    ]

    for sheet, headers, row in tests:
        print(f"üëâ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏—Å—Ç {sheet}")
        asyncio.create_task(gsheets.append_rows_async(
            sheet_name=sheet,
            headers=headers,
            rows=[row]
        ))
        print(f"‚úÖ {sheet} –≥–æ—Ç–æ–≤ + –∑–∞–ø–∏—Å—å {row}")

if __name__ == "__main__":
    asyncio.run(init_sheets())
